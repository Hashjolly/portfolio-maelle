---
export interface Props {
  href?: string;
  variant?: 'primary' | 'outline' | 'white' | 'outline-white';
  size?: 'sm' | 'md' | 'lg';
  external?: boolean;
  class?: string;
}

const { 
  href, 
  variant = 'primary', 
  size = 'md', 
  external = false, 
  class: className = '' 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center gap-2 font-medium rounded-2xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';

const variants = {
  primary: 'bg-primary text-white hover:bg-sand-600 focus:ring-primary',
  outline: 'border-2 border-primary text-primary hover:bg-primary hover:text-white focus:ring-primary',
  white: 'bg-white text-dark hover:bg-sand-50 focus:ring-white',
  'outline-white': 'border-2 border-white text-white hover:bg-white hover:text-dark focus:ring-white'
};

const sizes = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} animate-scale-in ${className}`;
---

{href ? (
  <a 
    href={href} 
    class={classes}
    target={external ? '_blank' : undefined}
    rel={external ? 'noopener noreferrer' : undefined}
  >
    <slot />
  </a>
) : (
  <button class={classes}>
    <slot />
  </button>
)}
