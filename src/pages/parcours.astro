---
import Layout from '@/layouts/Layout.astro';
import Container from '@/components/ui/Container.astro';
import Section from '@/components/ui/Section.astro';
import Tag from '@/components/ui/Tag.astro';
import MarkdownContent from '@/components/ui/MarkdownContent.astro';
import AnimatedElement from '@/components/ui/AnimatedElement.astro';
import { timelineData } from '@/data/timeline';
import { aboutData } from '@/data/about';
import { MapPin, Calendar, Award, Settings, Lightbulb } from 'lucide-astro';

const title = 'Parcours & Expérience';
const description = 'Découvrez mon parcours académique et professionnel en géographie, spécialisé en tourisme durable et gestion du littoral.';
---

<Layout title={title} description={description}>
  <div class="min-h-screen bg-gradient-to-br from-cream via-sand-50 to-sand-100">
    <!-- Navigation -->
    <nav class="fixed top-0 w-full bg-cream/90 backdrop-blur-sm z-50 border-b border-sand-200">
      <Container class="py-4">
        <div class="flex items-center justify-between">
          <a href="/" class="font-display font-bold text-xl text-primary hover:text-sand-600 transition-colors">
            Maëlle Langlais
          </a>
          <div class="hidden md:flex items-center space-x-8">
            <a href="/parcours" class="text-primary font-medium">Parcours</a>
            <a href="/projets" class="text-dark hover:text-primary transition-colors">Projets</a>
          </div>
        </div>
      </Container>
    </nav>

    <Section class="pt-32 pb-20">
      <Container>
        <!-- Header -->
        <AnimatedElement animation="fade-up" class="text-center mb-16">
          <h1 class="font-display text-4xl md:text-5xl font-bold text-dark mb-6">
            Mon Parcours
          </h1>
        </AnimatedElement>

        <!-- Skills & Tools -->
        <div class="grid md:grid-cols-3 gap-8 mb-20">
        <AnimatedElement animation="fade-up" delay={100} class="bg-white p-8 rounded-2xl shadow-sm">
            <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-6">
              <Award class="w-6 h-6 text-primary" />
            </div>
            <h3 class="font-display text-xl font-semibold text-dark mb-4">Compétences</h3>
            <div class="flex flex-wrap gap-2">
              {aboutData.hardSkills.map(skill => (
                <Tag variant="primary" size="sm">{skill}</Tag>
              ))}
            </div>
          </AnimatedElement>

          <AnimatedElement animation="fade-up" delay={100} class="bg-white p-8 rounded-2xl shadow-sm">
            <div class="w-12 h-12 bg-atlantic/10 rounded-lg flex items-center justify-center mb-6">
              <Settings class="w-6 h-6 text-atlantic" />
            </div>
            <h3 class="font-display text-xl font-semibold text-dark mb-4">Outils</h3>
            <div class="flex flex-wrap gap-2">
              {aboutData.tools.map(tool => (
                <Tag variant="secondary" size="sm">{tool}</Tag>
              ))}
            </div>
          </AnimatedElement>

          <AnimatedElement animation="fade-up" delay={100} class="bg-white p-8 rounded-2xl shadow-sm">
            <div class="w-12 h-12 bg-salicornes/10 rounded-lg flex items-center justify-center mb-6">
              <Lightbulb class="w-6 h-6 text-salicornes" />
            </div>
            <h3 class="font-display text-xl font-semibold text-dark mb-4">Savoir-être</h3>
            <div class="flex flex-wrap gap-2">
              {aboutData.softSkills.map(skill => (
                <Tag variant="accent" size="sm">{skill}</Tag>
              ))}
            </div>
          </AnimatedElement>
        </div>

        <!-- Timeline -->
        <div class="max-w-4xl mx-auto">
          <AnimatedElement animation="fade-up" delay={400}>
            <h2 class="font-display text-3xl font-bold text-dark mb-12 text-center">
              Timeline
            </h2>
          </AnimatedElement>
          
          <div class="relative">
            <!-- Timeline line -->
            <div class="absolute left-1/2 transform -translate-x-1/2 w-1 bg-sand-200 h-full timeline-line"></div>
            
            <div class="space-y-12">
              {timelineData.map((event, index) => (
                <AnimatedElement animation={index % 2 === 0 ? 'fade-right' : 'fade-left'} delay={200 + (index * 100)}>
                  <div class={`relative flex items-center ${index % 2 === 0 ? 'flex-row' : 'flex-row-reverse'}`}>
                    <!-- Timeline dot -->
                    <div class="absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-primary rounded-full border-4 border-cream z-10 timeline-dot hover:scale-150 transition-transform duration-300"></div>
                    
                    <!-- Content -->
                    <div class={`w-1/2 ${index % 2 === 0 ? 'pr-8 text-left' : 'pl-8 text-left'}`}>
                      <div class="bg-white p-6 rounded-2xl shadow-sm hover:shadow-lg transition-all duration-500 hover:scale-105 timeline-card">
                        <div class="flex items-center gap-2 mb-2">
                          {event.year ? (
                            <span class="font-bold text-primary text-lg">{event.year}</span>
                          ) : event.years ? (
                            <span class="font-bold text-primary text-lg">{event.years[0]} - {event.years[1]}</span>
                        ) : null}
                        {event.types && (
                          <div class="flex flex-wrap gap-1">
                            {event.types.map(type => (
                              <Tag
                                variant={'secondary'}
                                size="sm"
                              >
                                {type}
                              </Tag>
                            ))}
                          </div>
                        )}
                      </div>
                      <h3 class="font-display text-lg font-semibold text-dark mb-2">
                        {event.title}
                      </h3>
                      <div class="flex items-center text-dark/60 text-sm mb-3">
                        <MapPin class="w-4 h-4 mr-1" />
                        {event.location}
                      </div>
                      <div class="text-dark/80 text-sm leading-relaxed mb-3">
                        <MarkdownContent content={event.description} />
                      </div>
                      {event.tags && (
                        <div class="flex flex-wrap gap-1">
                          {event.tags.map(tag => (
                            <Tag variant="neutral" size="sm">{tag}</Tag>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
                </AnimatedElement>
              ))}
            </div>
          </div>
        </div>
      </Container>
    </Section>
  </div>
</Layout>
